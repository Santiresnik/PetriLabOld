# -*- coding: utf-8 -*-
"""PetriLab - Modelo CV Adapted.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-bdqshScJ2gnmIn0S1oSk0mmQ7-JSHG3
"""

import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import cv2
from google.colab.patches import cv2_imshow
from numpy.lib.polynomial import poly
from PIL import Image, ImageDraw
from sklearn.cluster import KMeans
import zipfile
import urllib.request

#from cvlib.object_detection import draw_bbox
#import cvlib as cv

req = urllib.request.urlopen("https://storage.googleapis.com/kagglesdsdata/datasets/819682/1402384/IMG_0873.JPG?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=databundle-worker-v2%40kaggle-161607.iam.gserviceaccount.com%2F20230831%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20230831T181246Z&X-Goog-Expires=345600&X-Goog-SignedHeaders=host&X-Goog-Signature=d6a53cdcfd0ff4cd19b16f7311ce77cd3da3cbb5957e5fe6e6e55c3bf646e16f4aa9790dc049dbe8b22f368b2a078be364ef0c69b16150ae3ade66fd5bf57621d2c37a463b8bc0b54770a956f18dc7945fd740ad78814c9dd34b4ee29a45897748c24a477436881ad25e69d556f58c460ad705de974e01ffdab1fa94b82ff245fa62264b5be78b77121a827407636144f5ebd5054e1435875b83f2389b8a6695d14de0b5f088e40cd5a99122f99cbf599a12dae80d47983e5136968a6a4cbfb8c52864a672168150f5764cf9f8d8b3de43a78eea2b5277345cc5d877c27bbd64af4ccf1aa465590780bb4323aa0e4bde0915a7cf4cbf24327a80dfd40701c7bc")
arr = np.asarray(bytearray(req.read()), dtype=np.uint8)
img = cv2.imdecode(arr, -1) # 'Load it as it is'

if cv2.waitKey() & 0xff == 27: quit()

if img.shape[::2] != (400,400):
    crop = cv2.resize(img, (int(int(img.shape[1]) * 400/int(img.shape[1])), int(int(img.shape[0]) * 400/int(img.shape[0]))), cv2.INTER_AREA)

if img.shape[::2] != (400,400):
  crop = cv2.resize(img, (int(int(img.shape[1]) * 400/int(img.shape[1])), int(int(img.shape[0]) * 400/int(img.shape[0]))), cv2.INTER_AREA)

plt.imshow(crop)

gray = cv2.cvtColor(crop, cv2.COLOR_BGR2GRAY)
plt.imshow(gray, cmap="gray")

blur = cv2.GaussianBlur(gray, (7, 7), 0)
plt.imshow(blur, cmap="gray")

canny = cv2.Canny(blur, 15, 75, 3)
plt.imshow(canny, cmap="gray")

dilated = cv2.dilate(canny, (1,1), iterations = 2)
plt.imshow(dilated, cmap="gray")

h = dilated.shape[0]
w = dilated.shape[1]
lum_img = Image.new('L',[h,w] ,0)
draw = ImageDraw.Draw(lum_img)
draw.pieslice([(45,45),(h-45,w-45)],0,360,fill=255)
img_arr = np.array(dilated)
lum_img_arr = np.array(lum_img)
cv2_imshow(lum_img_arr)

x = cv2.subtract(img_arr, lum_img_arr)

final_img_arr = cv2.subtract(dilated,x)
deganger = (Image.fromarray(final_img_arr))
plt.imshow(deganger, cmap="gray")

arrImg = np.array(deganger)
cvImg = cv2.cvtColor(arrImg, cv2.COLOR_RGB2BGR)
escalope = cv2.cvtColor(cvImg, cv2.COLOR_BGR2GRAY)

(cnt, hierarchy) = cv2.findContours(escalope, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
rgb = cv2.cvtColor(escalope, cv2.COLOR_BGR2RGB)
cv2.drawContours(rgb, cnt, -1, (0, 255, 0), 2)

w = rgb.shape[0]
h = rgb.shape[1]

print("Cantidad de colonias : " + str(len(cnt)))